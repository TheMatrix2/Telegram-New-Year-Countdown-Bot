from datetime import datetime
from telegram.ext import ContextTypes

from utils.chats import days_until_new_year, load_chats, remove_chat
from utils.setup import TIMEZONE


def word_after_number(days: int) -> str:
    """–§–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    last_digit = days % 10
    last_two_digits = days % 100

    if last_digit == 1 and last_two_digits != 11:
        return '–¥–µ–Ω—å'
    elif last_digit in [2, 3, 4] and last_two_digits not in [12, 13, 14]:
        return '–¥–Ω—è'
    else:
        return '–¥–Ω–µ–π'


def countdown_message():
    """–°–æ–∑–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    days = days_until_new_year()
    word = word_after_number(days)
    last_digit = days % 10
    last_two_digits = days % 100
    if days == 0:
        message = "üéâ –° –ù–æ–≤—ã–º –ì–æ–¥–æ–º! üéä"
    elif last_digit == 1 and last_two_digits != 11:
        message = f"üéÑ –û—Å—Ç–∞–ª—Å—è –≤—Å–µ–≥–æ {days} {word} –¥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞! üéÖ"
    elif last_digit in [2, 3, 4] and last_two_digits not in [12, 13, 14]:
        message = f"üéÑ –û—Å—Ç–∞–ª–æ—Å—å {days} {word} –¥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞! üéÖ"
    else:
        message = f"üéÑ –û—Å—Ç–∞–ª–æ—Å—å {days} {word} –¥–æ –ù–æ–≤–æ–≥–æ –≥–æ–¥–∞! üéÖ"
    return message


async def send_daily_message(context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –¥–Ω–µ–π –¥–æ –ù–ì –≤–æ –≤—Å–µ —á–∞—Ç—ã"""
    message = countdown_message()

    chats = load_chats()
    success_count = 0
    failed_chats = []

    for chat in chats:
        try:
            await context.bot.send_message(chat_id=chat['id'], text=message)
            success_count += 1
            print(f"[{datetime.now(TIMEZONE)}] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {chat['title']} ({chat['id']})")
        except Exception as e:
            print(f"[{datetime.now(TIMEZONE)}] –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {chat['title']} ({chat['id']}): {e}")
            failed_chats.append(chat['id'])

    # –£–¥–∞–ª—è–µ–º —á–∞—Ç—ã, –∫—É–¥–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å (–≤–æ–∑–º–æ–∂–Ω–æ –±–æ—Ç –±—ã–ª —É–¥–∞–ª–µ–Ω)
    for chat_id in failed_chats:
        remove_chat(chat_id)

    print(f"[{datetime.now(TIMEZONE)}] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {success_count}/{len(chats)} —á–∞—Ç–æ–≤")